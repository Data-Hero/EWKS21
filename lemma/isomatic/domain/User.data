 context User {
	//Entity
	structure User<valueObject> {
		//Id
		//GeneratedValue
		long id,
		//Column
		string name,
		//OneToMany
		Booking bookings,
		//OneToMany
		Device devices
	}

	list Users { User user }

	//Entity
	structure Booking {
		//Id
		long id
	}

	//Entity
	structure Device {
		//Id
		long id,
		//Column
		string serialNumber
	}
	
	structure UserDto<valueObject> {
		string name
	}
	
	structure DeviceDto<valueObject> {
		long id,
		string serialNumber
	}
	
	structure UserRepository<repository> {
		function Users findAll()
	}

	list DeviceUnitDtos {DeviceUnitDtos deviceUnitDtos}

	structure RemoteDeviceRepository<repository> {
		function DeviceUnitDtos fetchDevices()
	}
	
	structure UserService<applicationService> {
		hide immutable UserRepository userRepository,
		hide immutable RemoteDeviceRepository remoteDeviceRepository,

		function Users getAll(),
		function User getUserById(long id),
		
		procedure updateUser(User user),	
		procedure createUser(UserDto userDto),	
		procedure registerDevice(long userId, DeviceDto deviceDto)
	}
}